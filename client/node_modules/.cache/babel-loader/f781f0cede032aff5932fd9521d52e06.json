{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fachinformatiker Relaunch\\\\react-chat\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"http://localhost:5000\";\n  var connectionOptions = {\n    \"force new connection\": true,\n    reconnectionAttempts: \"Infinity\",\n    timeout: 10000,\n    transports: [\"websocket\"]\n  };\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io.connect(ENDPOINT, connectionOptions);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit(\"disconnect\", {\n        name,\n        room\n      });\n      socket.off();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messages\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Chat, \"DGTtK+cnWWSeRGiKbfaQ0Z+rBO8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Fachinformatiker Relaunch/react-chat/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","connectionOptions","reconnectionAttempts","timeout","transports","parse","search","connect","emit","off","on"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,QAAQ,GAAG,uBAAjB;AACA,MAAIC,iBAAiB,GAAG;AACtB,4BAAwB,IADF;AAEtBC,IAAAA,oBAAoB,EAAE,UAFA;AAGtBC,IAAAA,OAAO,EAAE,KAHa;AAItBC,IAAAA,UAAU,EAAE,CAAC,WAAD;AAJU,GAAxB;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACkB,KAAZ,CAAkBd,QAAQ,CAACe,MAA3B,CAAvB;AAEAjB,IAAAA,MAAM,GAAGD,EAAE,CAACmB,OAAH,CAAWP,QAAX,EAAqBC,iBAArB,CAAT;AAEAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACmB,IAAP,CAAY,MAAZ,EAAoB;AAAEhB,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAAE,CAA5C;AAEA,WAAO,MAAM;AACXL,MAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ,EAA0B;AAAEhB,QAAAA,IAAF;AAAQE,QAAAA;AAAR,OAA1B;AACAL,MAAAA,MAAM,CAACoB,GAAP;AACD,KAHD,CAVc,CAcd;AACD,GAfQ,EAeN,CAACT,QAAD,EAAWT,QAAQ,CAACe,MAApB,CAfM,CAAT;AAiBApB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACqB,EAAP,CAAU,SAAV,EAAsBd,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT,CA/B6B,CAqC7B;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMR,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Chat.css\";\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = \"http://localhost:5000\";\r\n  var connectionOptions = {\r\n    \"force new connection\": true,\r\n    reconnectionAttempts: \"Infinity\",\r\n    timeout: 10000,\r\n    transports: [\"websocket\"],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io.connect(ENDPOINT, connectionOptions);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", { name, room });\r\n      socket.off();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  //function for sending messages\r\n\r\n  return <h1>Chat</h1>;\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}